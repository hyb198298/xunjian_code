<launch>
    <!-- 将 Urdf 文件的内容加载到参数服务器 -->
   <param name="robot_description" textfile="$(find urdf_demo)/urdf/gazebo/robot.urdf" />
    <!-- 启动 gazebo -->
    <include file="$(find gazebo_ros)/launch/empty_world.launch">
        <arg name="world_name" value="$(find urdf_demo)/config/box_house.world" />
    </include>
    <!-- 在 gazebo 中显示机器人模型 -->
    <node pkg="gazebo_ros" type="spawn_model" name="model" args="-urdf -model mycar -param robot_description"  />
     <!--2.打开rviz-->
    <node pkg="rviz" type="rviz" name="rviz" args="-d $(find urdf_demo)/config/my_rviz.rviz"/> 
    <!--3.发布机器人状态-->
    <!-- 添加关节状态发布节点，发布不同部件坐标转换关系：这个节点的作用是发布机器人关节的状态信息。它读取URDF文件中定义的关节和连杆信息，并发布关于这些关节当前位置、速度和加速度的信息。这些信息对于机器人的状态估计、运动规划和控制至关重要 -->
    <node pkg="joint_state_publisher" type="joint_state_publisher" name="joint_state_publisher" />
    <!-- 添加机器人状态发布节点，这个节点负责发布整个机器人的状态信息，包括每个连杆的位置和方向。它使用joint_state_publisher发布的关节状态信息来计算和发布整个机器人模型的变换矩阵（TF）。这些变换矩阵允许其他节点了解机器人各部分在空间中的相对位置-->
    <node pkg="robot_state_publisher" type="robot_state_publisher" name="robot_state_publisher" />
    <!-- 可选:用于控制关节运动的节点，可以使用GUI控制关节 -->
</launch>